import &StandardImport

class JustTask extends FluxComponent
  @subscriptions
    :appKitViewState.gridSize
    :task

  delete:  -> @models.task.removeTask  @props.taskId
  promote: -> @models.task.promoteTask @props.taskId

  select: -> @props.select? @props.taskId

  render: ->
    @ extract gridSize
    @props extract
      order
      depth
      taskId
      selected
      path
      count
    @task extract?
      text

    count ?= order
    count = max count, order

    Element
      size: size =
        ww: 1
        h: gridSize *
          if taskId
            switch depth
            when 1 then 18
            else 12
          else 4

      draw:
        radius:     5
        color:      :white
      animators:
        size: toFrom: h: 0

      unless taskId
        cursor: :pointer
        on: pointerClick: @select
        opacity: .5

      Element
        {} size

        if @task
          &TaskTextEditor {} taskId, depth, tight: true

        else if !taskId
          TextElement
            TextStyles.largeBoldText
            :parentSize
            :textCenterCenter
            text: :+
            color: AppPalette.primary

      if order && count > 1
        labelColor =
          if selected
            AppPalette.primary
          else
            AppPalette.grey
        Element
          :row
          :childrenSize
          :pointerCursor
          on: pointerClick: @select
          padding:  gridSize
          inFlow: false

          TextElement
            TextStyles.largeBoldItalicText
            :childrenSize
            animators: :color
            color:    labelColor
            text:   "" #{order}
          TextElement
            TextStyles.smallBoldItalicText
            :childrenSize
            animators: :color
            color:    labelColor
            text:   "" /#{count}

      if @props.showOptions && taskId
        Element
          :row
          :topRight
          :childrenSize
          TextElement
            TextStyles.mediumBoldText
            :childrenSize
            :pointerCursor
            key: :promoteButton
            layoutMode: :tight
            animators:
              :fontSize
              :color
            on: pointerClick: @promote
            color: AppPalette.primary
            padding: gridSize
            text: "^"

          TextElement
            TextStyles.mediumBoldText
            :childrenSize
            :pointerCursor
            key: :deleteButton
            animators:
              :fontSize
              :color
            on: pointerClick: @delete
            color: AppPalette.primary
            padding: gridSize
            text: "x"
            layoutMode: :tight
