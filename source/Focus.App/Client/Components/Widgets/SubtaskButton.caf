import &StandardImport

class SubtaskButton extends FluxComponent
  @subscriptions
    :appKitViewState.gridSize
    :task
    :taskNavState.taskNavStack

  @propFields
    :taskId
    :parentTaskId

  @getter
    selected: -> @taskNavStack && @taskId in @taskNavStack

  action: ->
    if @selected
      @models.taskNavState.hideSubtask
        @taskId
    else
      @models.taskNavState.showSubtask
        @parentTaskId
        @taskId


    @models.task.clearUnusedSubtasks @taskId

  render: ->
    @task extract?
      text
      subtasks

    haveText = present text

    &ButtonWrapper
      {} @selected, @action

      TextElement
        TextStyles.mediumLightText
        :parentSize
        :textCenterCenter
        :pointerCursor
        padding: @gridSize / 2
        color:
          if haveText
                TextPalette.black.softPrimary
          else  TextPalette.black.tertiary
        text:
          if haveText
                text
          else  "sub-goal"
